ООП в Java, принципи ООП
Завдання
Удоскональте проєкт: ООП Java, принципи ООП.

Технічні вимоги:

Зробіть клас Pet абстрактним.

Реалізуйте успадкування від класу Pet:

Створіть класи Fish, DomesticCat, Dog, RoboCat (кіт-робот).
не всі тварини можуть робити однакові дії. Всі їдять однаково, кожен по-різному описує себе,
а от гидоти роблять не всі й по-різному (рибка, наприклад, взагалі не вміє).
Тому реалізацію методу eat залиште в абстрактному класі, метод respond зробіть абстрактним, а foul
виділіть в інтерфейс і реалізуйте тільки в тих класах-спадкоємцях, які можуть це зробити.
Додайте відповідні перерахування в Species, також додайте перерахування UNKNOWN (для тварин, вид яких з якихось причин
невідомий); зробіть так щоб при ініціалізації змінних їм автоматично присвоювався відповідний вигляд, а у разі,
якщо надалі з'являться тварини невідомого типу - їм автоматично присвоювався тип UNKNOWN.

Тепер поле Species задається при ініціалізації об'єкта – видаліть його з конструктора Pet.
Прослідкуйте, щоб у всіх підкласах були конструктори суперкласу.
Реалізуйте спадкування від класу Human:
Створіть класи-спадкоємці класу Human: Man, Woman; забороніть успадкування цих класів.
пере визначте у кожного підкласу Human метод greetPet (текст можете вибрати на власний розсуд).
опишіть у кожного підкласу унікальний йому метод на власний розсуд (наприклад, makeup (підфарбуватися) у жінок
і repairCar (лагодити авто) у чоловіків).

Необов'язкове завдання просунутої складності:

Створіть інтерфейс HumanCreator та опишіть метод bornChild(), який створює новий екземпляр класу Human (дитина).
Реалізуйте інтерфейс HumanCreator в одному з наявних класів проєкту. Реалізація повинна повертати новий об'єкт Man
або Woman, із встановленими посиланнями на поточну родину, прізвищем батька, випадковим ім'ям (потрібно заздалегідь
створити список імен), та середнім IQ (від батька та матері). Стать дитини визначається випадково з ймовірністю 50х50.